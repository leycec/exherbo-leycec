# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'qdox-1.6.3.ebuild' from Gentoo, which is:
#     Copyright 1999-2010 Gentoo Foundation

#FIXME leycec: Add a new "ant_tasks: qdox" dependency to the
# "dev-java/apache-ant" exheres, for integrating with Ant.

require java install_aliases
export_exlib_phases src_prepare src_compile src_install

BUGS_TO="leycec@gmail.com"

SUMMARY="Java parser for extracting entities from source files with @tags"
DESCRIPTION="
QDox is a high speed, small footprint parser for extracting class/interface/method definitions from
source files complete with JavaDoc @tags. It is designed to be used by active code generators or
documentation tools. 
"

HOMEPAGE="http://${PN}.codehaus.org"
DOWNLOADS="http://repository.codehaus.org/com/thoughtworks/${PN}/${PN}/${PV}/${PNV}-sources.jar"
REMOTE_IDS=""

UPSTREAM_DOCUMENTATION="http://qdox.codehaus.org/apidocs/index.html [[ lang = en ]]"
UPSTREAM_CHANGELOG="http://${PN}.codehaus.org/changes-report.html"

SLOT="0"
LICENCES="Apache-2.0"
MYOPTIONS=""

# QDox does not use Ant to compile or jar itself. It does, however, compile
# against Ant class files: e.g., "import org.apache.tools.ant.Task". So Ant is a
# build and runtime dependency despite our not requiring the "ant" exlib, above.
DEPENDENCIES="
    build:
        app-arch/unzip
    build+run:
        dev-java/apache-ant
"

# QDox extracts to the current path.
WORK="${WORKBASE}"

# QDox currently ships no makefiles. I don't know whether to hug them or cry.
QDOX_CLASSPATH="${ROOT}"/usr/share/ant/lib/ant.jar
QDOX_SRC_DIR="${WORK}"/src
QDOX_BUILD_DIR="${WORK}"/build
QDOX_DIST_DIR="${WORK}"/dist
QDOX_JAR_FILE=${QDOX_DIST_DIR}/${PN}.jar

qdox_src_prepare() {
    einfo "Preparing directory structure..."
    edo mkdir -p ${QDOX_SRC_DIR} ${QDOX_BUILD_DIR} ${QDOX_DIST_DIR}
    edo mv "${WORK}"/com ${QDOX_SRC_DIR}

    # Remove all JUnit-related source files for the moment. (They work; we just
    # don't have a "dev-java/junit" exheres, at the moment.)
    edo rm -rf ${QDOX_SRC_DIR}/com/thoughtworks/qdox/junit
}

qdox_src_compile() {
    # Compile with JDK 1.4 to avoid spurious warnings.
    einfo "Compiling class files..."
    edo javac \
        -sourcepath ${QDOX_SRC_DIR} \
        -d          ${QDOX_BUILD_DIR} \
        -classpath  ${QDOX_CLASSPATH} \
        -source 1.4 -target 1.4 \
        ${QDOX_SRC_DIR}/**/*.java
}

qdox_src_install() {
    emagicdocs

    einfo "Collecting jar file..."
    edo jar -cvf ${QDOX_JAR_FILE} -C ${QDOX_BUILD_DIR} com

    einfo "Installing jar file..."
    set_install_dir /usr/share/${PN}
    install_file ${QDOX_JAR_FILE}
}

