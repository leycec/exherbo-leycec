# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2

require tomcat

# Tomcat installs a Jasper subcompoment, as well, which other exheres require.
# However, building Jasper is an entangling mess due to circular dependencies.
# Simply download a pre-compiled jar file corresponding to this exheres version,
# for the moment. (This will not be easy to fix: the dependency is Eclipse.)
TOMCAT_JASPER_ARCHIVE="jasper-${PV}.jar"
DOWNLOADS+="
    ${HOMEPAGE}/dev/dist/m2-repository/org/apache/${PN}/jasper/${PV}/${TOMCAT_JASPER_ARCHIVE}
"

# Each major version of Apache Tomcat supports a different minor version of the
# 2.x series of the Java Servlet API. We don't particularly care which version,
# however; it's simply important we bump slots when bumping major versions
# supporting backwards-incompatible Java Servlet APIs. For details, see:
#
# http://tomcat.apache.org/whichversion.html
SLOT="6"
PLATFORMS="~amd64 ~x86"

# Tomcat's "build.xml" is fairly buggy. Its "compile" task does not depend on
# its "build-prepare" task for example; thus, we explicitly run the latter.
# More disconcertingly, it explicitly depends on external jar files like
# Eclipse's JDT. But Eclipse itself depends on the Tomcat jar files. Thus, this
# introduces a catch-22. Patch her up, Sulu.
DEFAULT_SRC_PREPARE_PATCHES+=( "${FILES}/${SLOT}/build_xml-fix.patch" )
DEFAULT_SRC_INSTALL_EXTRA_DOCS=( "RUNNING.txt" "STATUS.txt" )

ANT_SRC_CONFIGURE_PARAMS=( build-prepare )
ANT_SRC_COMPILE_PARAMS=( compile )
ANT_SRC_INSTALL_PARAMS=( package )

# Absolute or relative path under ${WORK} having output jar files.
TOMCAT_DIST_LIB_DIR="${TOMCAT_DIST_ROOT_DIR}/lib/"

src_prepare() {
    tomcat_src_prepare

    # Tomcat ships with crufty source files:
    #
    # * The "java/org/apache/jasper" tree, which depends on Eclipse's JDT.
    # * The "java/org/apache/catalina" tree, which depends on Jasper.
    # * The "java/org/apache/naming" tree, which depends on Catalina.
    # * The "java/org/apache/jk" tree, which depends on Catalina.
    # * The "java/org/apache/coyote" tree, which depends on Coyote JK.
    #
    # It's a wonder anything's left.
    echo ">>> Removing extraneous source files"
    edo rm -rf "java/org/apache"/{catalina,coyote,jasper,jk,naming}
}

src_install() {
    antefix_src_install

    # Install "servlet-api.jar" and "jsp-api.jar" with Eclipse-compatible OSGi
    # manifests, and all others as is (as Eclipse does not require them).
    #
    # Do this here rather via the ${JAVA_SRC_INSTALL_JARS_WITH_MANIFESTS} array
    # for the sake of simplicity.
    echo ">>> Correcting jar file manifests"
    edo cp "${FETCHEDDIR}/${TOMCAT_JASPER_ARCHIVE}" "${TOMCAT_DIST_LIB_DIR}"/
    replace_jar_manifest "${TOMCAT_DIST_LIB_DIR}/servlet-api.jar"          "${FILES}/${SLOT}/MANIFEST-servlet-api.MF"
    replace_jar_manifest "${TOMCAT_DIST_LIB_DIR}/jsp-api.jar"              "${FILES}/${SLOT}/MANIFEST-jsp-api.MF"
    replace_jar_manifest "${TOMCAT_DIST_LIB_DIR}/${TOMCAT_JASPER_ARCHIVE}" "${FILES}/${SLOT}/MANIFEST-jasper.MF"

    echo ">>> Installing jar files"
    install_jars "${TOMCAT_DIST_ROOT_DIR}"/**/*.jar
}

