# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2
#
# --------------------( SYNOPSIS                           )--------------------
# Each Tomcat slot requires a unique build process. This exlib abstracts out as
# much commonality as possible, with individual exheres implementing the detail.

# ....................{ EXLIB                              }....................
require antefix apache [ \
    download_subdir="tomcat-$(ever range 1)/v${PV}/src" \
    pnv="apache-${PNV}-src" ]
export_exlib_phases src_prepare

# Absolute or relative path to this Tomcat slot's "build.xml" directory. This is
# the path having: "build.xml", "build.properties", and 
# "build.properties.default".
#
# Defaults to "${WORK}".
myexparam ant_dir=.
exparam -v TOMCAT_ANT_DIR ant_dir

# ....................{ EXHERES                            }....................
BUGS_TO="leycec@gmail.com"

SUMMARY="API core for Tomcat, Apache's Java Servlet and JSP container"
DESCRIPTION="
Apache Tomcat (or Jakarta Tomcat or simply Tomcat) is an Apache-hosted servlet
container. It implements the Java Servlet and the JavaServer Pages (JSP)
specifications from Sun Microsystems, and optionally provides a \"pure Java\"
HTTP web server environment for Java code to run. Tomcat should not be confused
with the Apache web server, which is a C implementation of an HTTP web server;
these two web servers are not bundled together. Apache Tomcat includes tools for
configuration and management, but can also be configured by editing XML
configuration files. (This is the API core for Tomcat, and does not in and of
itself provide an executable Tomcat web server. It is therefore typically
bundled within an executable environment like Eclipse or the Tomcat web server.)
"

# Note: "DOCUMENTATION_ROOT" cannot be prefixed with "UPSTREAM_" as our
# resolvers hate that at the moment.
TOMCAT_DOCUMENTATION_ROOT="${HOMEPAGE}/${PN}-$(ever range 1-2)-doc"
UPSTREAM_DOCUMENTATION="${TOMCAT_DOCUMENTATION_ROOT} [[ lang = en ]]"
UPSTREAM_CHANGELOG="${TOMCAT_DOCUMENTATION_ROOT}/changelog.html"

# All Tomcat slots provide these common options.
MYOPTIONS+="debug"

# Some Tomcat slots require a different "build.xml" file.
ANT_BUILD_XML="${TOMCAT_ANT_DIR}/build.xml"

# All Tomcat slots output jar files under this path.
TOMCAT_DIST_ROOT_DIR="${WORK}/output/build"

# Some Tomcat exheres bundle documentation under another path.
if [[ "${TOMCAT_ANT_DIR}" != . ]]; then
    DEFAULT_SRC_INSTALL_EXTRA_SUBDIRS+="${TOMCAT_ANT_DIR}"
fi

tomcat_src_prepare() {
    antefix_src_prepare

    # Tomcat ships "build.properties.default" which it requires we manually 
    # copy to this "build.properties" and change as follows:
    #
    # * Set the "base.path" to an absolute output path under "${WORK}",
    #   otherwise the build process tries writing to "/usr/share/java". (Baad.)
    # * Enable debugging if and only if the "debug" exheres option is enabled.
    # * Do not append "-dev" to the build version.
    echo ">>> Patching build.properties"
    edo mv "${TOMCAT_ANT_DIR}/build.properties.default" \
           "${TOMCAT_ANT_DIR}/build.properties"
    edo sed \
        -e "s:^\(base\.path=\).*$:\1${TOMCAT_DIST_ROOT_DIR}:" \
        -e "s:^\(compile\.debug=\).*$:\1$(option debug && echo true || echo false):" \
        -e "s:^\(version\.suffix=\).*$:\1:" \
        -i "${TOMCAT_ANT_DIR}/build.properties"
}

