# Copyright 2010 Cecil Curry <leycec@gmail.com>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'commons-logging-1.1.ebuild' from Gentoo, which is:
#     Copyright 1999-2010 Gentoo Foundation

require antefix apache-commons
export_exlib_phases src_prepare

BUGS_TO="leycec@gmail.com"

SUMMARY="Java bridge between different Java logging facilities"
DESCRIPTION="
Java Commons Logging (JCL) is an ultrathin bridge between different Java logging
facilities giving other Java libraries a common interface over whichever logging
facilities may be locally available, at JCL runtime. It supports popular logging
facilities via an extensible adapter architecture.
"

UPSTREAM_DOCUMENTATION="${HOMEPAGE}/${PNV}/apidocs [[ lang = en ]]"
UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/${PNV}/RELEASE-NOTES.txt"

# Commons Logging uses the logging facility built into the JDK as its fallback.
# Therefore, the following logging facilities are optional but recommended.
# Note it also supports the Apache Avalon logkit and framework; as of 2004,
# however, Apache Avalon is dead and thus not supported by this exheres.
MYOPTIONS+="
    log4j  [[ description = [ support logging via apache's log4j ]  ]]
"

# Commons Logging insists it requires Tomcat 4.1.xx (i.e., Servlet API 2.3).
# Fortunately, it builds against all later slots as well. Thus, use the newest
# working Tomcat slot as of this writing.
DEPENDENCIES+="
    build+run:
        log4j?  ( dev-java/log4j:1.2[>=1.2.16] )
        dev-java/tomcat:6[>=6.0.26]
    build+test:
        dev-java/junit:4
"

# Common Logging's "build.xml" appends "-SNAPSHOT" to its version numbers. Noo!
# It also produces jar files under "${build.home}" rather than the usual
# "${dist.home}". Thus, just set the former to the latter.
ANT_PARAMS=(
    -Dcomponent.version="${PV}"
    -Dbuild.home="${APACHE_COMMONS_DIST_DIR}"
)

# The "compile" task both compiles and jars. So, we're done.
ANT_SRC_PREPARE_PARAMS=( static )
ANT_SRC_COMPILE_PARAMS=( compile )

commons-logging_src_prepare() {
    # Commons Logging ships a not very helpful "build.properties.sample" file.
    # Brush off that file and create our own "build.properties" file by hand.
    einfo "Creating build.properties..."
    edo cat <<EOF > "build.properties" 
junit.jar=$(which_installed_jar_file "junit:4")
servletapi.jar=$(which_installed_jar_file "tomcat:6" "servlet-api")
EOF

    # Notify Commons Logging of optional dependencies.
    option log4j && echo "log4j12.jar="$(which_installed_jar_file "log4j:1.2") >> build.properties

    # Do the above prior to calling this "src_prepare", as this invokes Ant.
    apache-commons_src_prepare
}

